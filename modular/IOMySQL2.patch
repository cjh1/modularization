diff --git a/IO/MySQL/vtkMySQLDatabase.cxx b/IO/MySQL/vtkMySQLDatabase.cxx
index f998b23..6ab83c8 100644
--- a/IO/MySQL/vtkMySQLDatabase.cxx
+++ b/IO/MySQL/vtkMySQLDatabase.cxx
@@ -35,41 +35,6 @@
 
 vtkStandardNewMacro(vtkMySQLDatabase)
 
-// Registration of MySQL dynamically with the vtkSQLDatabase factory method.
-vtkSQLDatabase * MySQLCreateFunction(const char* URL)
-{
-  std::string urlstr(URL ? URL : "");
-  std::string protocol, unused;
-  vtkMySQLDatabase *db = 0;
-
-  if (vtksys::SystemTools::ParseURLProtocol(urlstr, protocol, unused) &&
-      protocol == "mysql")
-    {
-    db = vtkMySQLDatabase::New();
-    db->ParseURL(URL);
-    }
-
-  return db;
-}
-
-class vtkMySQLDatabaseRegister
-{
-public:
-  vtkMySQLDatabaseRegister()
-    {
-    vtkSQLDatabase::RegisterCreateFromURLCallback(MySQLCreateFunction);
-    }
-  ~vtkMySQLDatabaseRegister()
-    {
-    vtkSQLDatabase::UnRegisterCreateFromURLCallback(MySQLCreateFunction);
-    }
-};
-
-// Remove ifndef in VTK 6.0: only register callback in old layout.
-#ifndef VTK_USE_MYSQL
-static vtkMySQLDatabaseRegister mySQLDataBaseRegister;
-#endif
-
 // ----------------------------------------------------------------------
 vtkMySQLDatabase::vtkMySQLDatabase() :
   Private(new vtkMySQLDatabasePrivate())
