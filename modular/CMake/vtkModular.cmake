# Override CMake's built-in add_* commands: assign LABELS to tests and targets
# automatically. Depends on the CMake variable vtk-module being set to the
# "current" module when add_* is called.
macro(verify_vtk_module_is_set)
  if("" STREQUAL "${vtk-module}")
    message(FATAL_ERROR "CMake variable vtk-module is not set")
  endif()
endmacro()

macro(add_executable)
  _add_executable(${ARGN})
  verify_vtk_module_is_set()
  set_property(TARGET ${ARGV0} PROPERTY LABELS ${vtk-module})
  set_property(GLOBAL APPEND PROPERTY ${vtk-module}_EXECUTABLE_TARGETS ${ARGV0})
endmacro()

macro(add_library)
  _add_library(${ARGN})
  verify_vtk_module_is_set()
  set_property(TARGET ${ARGV0} PROPERTY LABELS ${vtk-module})
  set_property(GLOBAL APPEND PROPERTY ${vtk-module}_LIBRARY_TARGETS ${ARGV0})
endmacro()

macro(add_test)
  _add_test(${ARGN})
  verify_vtk_module_is_set()
  if("NAME" STREQUAL "${ARGV0}")
    set(_imm_test ${ARGV1})
  else()
    set(_imm_test ${ARGV0})
  endif()
  set_property(TEST ${_imm_test} PROPERTY LABELS ${vtk-module})
  set_property(GLOBAL APPEND PROPERTY ${vtk-module}_TESTS ${_imm_test})
endmacro()

# Follow dependencies.
macro(vtk_module_enable vtk-module _needed_by)
  if(NOT Module_${vtk-module})
    if(NOT ${vtk-module}_TESTED_BY OR
      NOT "x${_needed_by}" STREQUAL "x${${vtk-module}_TESTED_BY}")
      list(APPEND VTK_MODULE_${vtk-module}_NEEDED_BY ${_needed_by})
    endif()
  endif()
  if(NOT ${vtk-module}_ENABLED)
    set(${vtk-module}_ENABLED 1)
    foreach(dep IN LISTS VTK_MODULE_${vtk-module}_DEPENDS)
      vtk_module_enable(${dep} ${vtk-module})
    endforeach()
    if(${vtk-module}_TESTED_BY)
      vtk_module_enable(${${vtk-module}_TESTED_BY} "")
    endif()
  endif()
endmacro()

macro(vtk_module _name)
  set(vtk-module ${_name})
  set(vtk-module-test ${_name}-Test)
  set(_doing "")
  set(VTK_MODULE_${vtk-module}_DEPENDS "")
  set(VTK_MODULE_${vtk-module-test}_DEPENDS "${vtk-module}")
  set(VTK_MODULE_${vtk-module}_DEFAULT OFF)
  foreach(arg ${ARGN})
    if("${arg}" MATCHES "^(DEPENDS|TEST_DEPENDS|DEFAULT)$")
      set(_doing "${arg}")
    elseif("${_doing}" MATCHES "^DEPENDS$")
      list(APPEND VTK_MODULE_${vtk-module}_DEPENDS "${arg}")
    elseif("${_doing}" MATCHES "^TEST_DEPENDS$")
      list(APPEND VTK_MODULE_${vtk-module-test}_DEPENDS "${arg}")
    elseif("${_doing}" MATCHES "^DEFAULT")
      set(VTK_MODULE_${vtk-module}_DEFAULT "${arg}")
    else()
      set(_doing "")
      message(AUTHOR_WARNING "Unknown argument [${arg}]")
    endif()
  endforeach()
  list(SORT VTK_MODULE_${vtk-module}_DEPENDS) # Deterministic order.
  list(SORT VTK_MODULE_${vtk-module-test}_DEPENDS) # Deterministic order.
endmacro()

macro(init_module_vars)
  verify_vtk_module_is_set()
  set(${vtk-module}-targets VTKTargets)
  set(${vtk-module}-targets-install "${VTK_INSTALL_PACKAGE_DIR}/ITKTargets.cmake")
  set(${vtk-module}-targets-build "${VTK_BINARY_DIR}/VTKTargets.cmake")
  set(${vtk-module}_DIR "${${vtk-module}_BINARY_DIR}") # find_package

  # Start each module with these properties empty. Calls to add_executable,
  # add_library and add_test accumulate names into these properties:
  set_property(GLOBAL PROPERTY ${vtk-module}_EXECUTABLE_TARGETS "")
  set_property(GLOBAL PROPERTY ${vtk-module}_LIBRARY_TARGETS "")
  set_property(GLOBAL PROPERTY ${vtk-module}_TESTS "")
endmacro()

macro(add_module_target)
  verify_vtk_module_is_set()
  add_custom_target(${vtk-module}-all)
  get_property(_imm_exe_targets GLOBAL PROPERTY ${vtk-module}_EXECUTABLE_TARGETS)
  get_property(_imm_lib_targets GLOBAL PROPERTY ${vtk-module}_LIBRARY_TARGETS)
  set(_imm_dep_targets ${_imm_exe_targets} ${_imm_lib_targets})
  if(_imm_dep_targets)
    add_dependencies(${vtk-module}-all ${_imm_dep_targets})
  endif()
endmacro()
