diff --git a/IO/SQL/Testing/Cxx/TestSQLDatabaseSchema.cxx b/IO/SQL/Testing/Cxx/TestSQLDatabaseSchema.cxx
index ba017ae..6ca31a2 100644
--- a/IO/SQL/Testing/Cxx/TestSQLDatabaseSchema.cxx
+++ b/IO/SQL/Testing/Cxx/TestSQLDatabaseSchema.cxx
@@ -22,7 +22,7 @@ PURPOSE.  See the above copyright notice for more information.
 // for implementing this test.
 
 #include "vtkSQLDatabaseSchema.h"
-
+#include "DatabaseSchemaWith2Tables.h"
 #include "vtkStdString.h"
 
 #include <set>
@@ -32,7 +32,7 @@ int TestSQLDatabaseSchema( int /*argc*/, char* /*argv*/[] )
   bool status = true;
 
   // 1. Create the schema
-#include "DatabaseSchemaWith2Tables.cxx"
+  DatabaseSchemaWith2Tables schema;
 
   // 2. Check the schema
 
@@ -100,7 +100,7 @@ int TestSQLDatabaseSchema( int /*argc*/, char* /*argv*/[] )
   colTypes.insert( static_cast<int>( vtkSQLDatabaseSchema::VARCHAR ) );
 
   // Loop over all columns of the first table
-  tblHandle = 0;
+  int tblHandle = 0;
   int numCol = schema->GetNumberOfColumnsInTable( tblHandle );
   if ( numCol != 3 )
     {
@@ -290,7 +290,5 @@ int TestSQLDatabaseSchema( int /*argc*/, char* /*argv*/[] )
       }
     }
 
-  schema->Delete();
-
   return status ? 0 : 1;
 }
diff --git a/IO/SQL/Testing/Cxx/TestSQLiteDatabase.cxx b/IO/SQL/Testing/Cxx/TestSQLiteDatabase.cxx
index 492e99a..d7ef8f5 100644
--- a/IO/SQL/Testing/Cxx/TestSQLiteDatabase.cxx
+++ b/IO/SQL/Testing/Cxx/TestSQLiteDatabase.cxx
@@ -29,6 +29,7 @@
 #include "vtkTable.h"
 #include "vtkVariant.h"
 #include "vtkVariantArray.h"
+#include "DatabaseSchemaWith2Tables.h"
 
 #include <vector>
 
@@ -260,7 +261,7 @@ int TestSQLiteDatabase( int /*argc*/, char* /*argv*/[])
 // Testing transformation of a schema into a SQLite database
 
   // 1. Create the schema
-#include "DatabaseSchemaWith2Tables.cxx"
+  DatabaseSchemaWith2Tables schema;
 
   // 2. Convert the schema into a SQLite database
   cerr << "@@ Converting the schema into a SQLite database...";
@@ -274,7 +275,7 @@ int TestSQLiteDatabase( int /*argc*/, char* /*argv*/[])
     return 1;
     }
 
-  status = dbSch->EffectSchema( schema ); 
+  status = dbSch->EffectSchema( schema.GetSchema() );
   if ( ! status )
     {
     cerr << "Could not effect test schema.\n";
@@ -295,7 +296,8 @@ int TestSQLiteDatabase( int /*argc*/, char* /*argv*/[])
     }
 
   std::vector<vtkStdString> tables;
-  for ( tblHandle = 0; query->NextRow(); ++ tblHandle )
+  int tblHandle = 0;
+  for ( ; query->NextRow(); ++ tblHandle )
     {
     vtkStdString tblNameSch( schema->GetTableNameFromHandle( tblHandle ) );
     vtkStdString tblNameDB( query->DataValue( 0 ).ToString() );
@@ -341,7 +343,6 @@ int TestSQLiteDatabase( int /*argc*/, char* /*argv*/[])
   if ( ! query->Execute() )
     {
     cerr << "Query failed" << endl;
-    schema->Delete();
     query->Delete();
     db->Delete();
     return 1;
@@ -357,7 +358,6 @@ int TestSQLiteDatabase( int /*argc*/, char* /*argv*/[])
   if ( ! query->Execute() )
     {
     cerr << "Query failed" << endl;
-    schema->Delete();
     query->Delete();
     db->Delete();
     return 1;
@@ -366,7 +366,6 @@ int TestSQLiteDatabase( int /*argc*/, char* /*argv*/[])
   if ( ! query->NextRow() )
     {
     cerr << "Query returned no results" << endl;
-    schema->Delete();
     query->Delete();
     db->Delete();
     return 1;
@@ -396,7 +395,6 @@ int TestSQLiteDatabase( int /*argc*/, char* /*argv*/[])
 
   // Clean up
   dbSch->Delete();
-  schema->Delete();
   query->Delete();
 
   return 0;
